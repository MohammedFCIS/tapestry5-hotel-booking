<html t:type="layout" t:pageTitle="Find a Hotel"
      xmlns:t="http://tapestry.apache.org/schema/tapestry_5_3.xsd"
      xmlns:p="tapestry:parameter">

	<h2>Find a Hotel</h2>

	<form t:type="form" t:zone="result" t:id="searchForm" class="form-horizontal" >
		<div class="form-group">
			<label t:type="label" t:for="query" class="col-md-4">Search</label>
			<div class="col-md-8">
				<input type="text" t:type="textfield" t:id="query" t:value="criteria.query"
						placeholder="Enter City or Hotel Name" class="form-control"/>
					<div class="hint">Hint: try <tt>Marriott</tt> or <tt>San Francisco</tt></div>
			</div>
		</div>
		<div class="form-group">
			<label t:type="label" t:for="rowsPerPage" class="col-md-4">Results</label>
			<div class="col-md-2">
				<select t:type="select" t:id="rowsPerPage" class="form-control"
						t:value="criteria.rowsPerPage" t:model="literal:5,10,15,20"></select>
			</div>
		</div>
		<div class="col-md-offset-4 col-md-8">
			<input type="submit" t:type="submit" class="btn btn-default" value="Find Matching Hotels" />
			<span t:type="ajaxloader" t:trigger="searchForm" t:zone="result"></span>
		</div>
	</form>

	<!-- Result area -->
	<div class="clearer"></div>
	<div class="section result">
		<t:zone t:id="result" id="result">
			<t:grid t:source="source" t:inPlace="true" t:rowsPerPage="criteria.rowsPerPage" t:include="name,address,zip" t:add="cityState,action" t:row="currentHotel">
				<p:actionCell><t:pagelink t:context="currentHotel" t:page="view">Details</t:pagelink></p:actionCell>
				<p:cityStateCell>${currentHotel.city}, ${currentHotel.state}</p:cityStateCell>
				<p:empty>
					<t:if test="criteria.query">
						<p class="empty-result">${message:no-result}</p>
					</t:if>
				</p:empty>
			</t:grid>
		</t:zone>
	</div>

	<t:shoppingCart />
	
	<p:sidebar>

        <p>This is the home page of the Tapestry Hotel Booking demonstration app.
           This page is constructed by Tapestry
           using an HTML-formatted template file, Index.tml. The small amount of
           code supporting this page is in the correspondingly-named class file,
           Index.java. <em>Generally, every Tapestry page has a template file and a
           class file sharing the same name.</em>
        </p>
        <p>The overall layout of <em>all</em> pages in the app (the common header
           and footer elements, for example) is controlled by the
           Layout.tml template. This page explicitly wraps itself in the Layout
           component by specifying &lt;html t:type="layout".../&gt; at the top
           of its template file.
        </p>
        <p>
            This page uses Tapestry's <em>Form</em> component, taking advantage of its
            <a href="http://tapestry.apache.org/ajax-and-zones.html">zones</a> feature.
            With zones, when you "submit" the form, Tapestry-supplied JavaScript submits an AJAX request to the
            server and gets back HTML that is inserted into the page dynamically. You don't have to write any
            JavaScript if you don't want to.
        </p>
        <p>The &lt;t:zone&gt; component in this page's template file (Index.tml)
            contains the HTML elements for the layout of content within the zone.
            In this case, those HTML elements consist of an HTML table produced by
            Tapestry's built-in <a href="http://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/components/Grid.html">Grid</a>
            component (which only appears when there are search results to display).
        </p>
        <p>
            The <em>Grid</em> component (&lt;t:grid&gt;) generates an HTML
            table from a collection of JavaBeans (one per table row)
            with built-in JavaScript for sorting and pagination.
            The built-in Hibernate module comes with an optimized version
            of <em>GridDataSource</em> to create efficient database requests for page-at-a-time
            retrieval of data.
        </p>
        <p>
            Also, we're using the Grid component's built-in partial refresh option ("inPlace")
            that allows pagination and sorting to occur without redrawing the whole page.
        </p>
        <p>Finally, the "Details" link in each row is built with Tapestry's
           <a href="http://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/components/PageLink.html">PageLink</a>
           component, which in this case constructs a URL that includes an "activation context"
           (the part of the URL after the page name) consisting of the primary key of
           the record in the database corresponding to each table row.
        </p>
	</p:sidebar>  

</html>
